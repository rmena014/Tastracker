* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.clearfix::after {
  display: flex;
  content: "";
  clear: both;
}

form#add-task {
  padding: 0;
}
@media screen and (max-width: 365px) {
  .edit {
    display: none;
  }
}
.tasks .addTaskfield input[type="text"] {
  width: 60%;
}
.is-complete p {
  text-decoration: line-through;
}

h1 {
  color: rgb(255, 255, 255);
  text-shadow: red 0px 0px 10px;
  padding-right: 10px;
}

.edit {
  padding-right: 10px;
}

.appInfo {
  display: flex;
  justify-content: center;
  padding: 20px;
}

.tasks ul {
  padding: 0;
}
.tasks li {
  list-style: none;
}

.task {
  position: relative;
  border-bottom: 1px solid rgb(78, 190, 255);
}

.task:last-of-type {
  border-bottom: none;
}

.checkbox,
.text {
  margin-top: 8px;
}

.text {
  float: left;
  margin: 11px 0;
  font-size: 2.5vh;
}

.checkbox,
.close {
  float: right;
}

.tasks input[type="submit"] {
  margin: 0;
  width: 30%;
  display: inline-block;
}

body {
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: linear-gradient(rgb(185, 132, 245), rgb(185, 253, 255));
}

.tasks {
  display: relative;
  border-radius: 8px;
  padding: 15px;
  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.08),
    0 2px 5px 0 rgba(0, 0, 0, 0.12);
  overflow: hidden;
  background-color: white;
  border: solid black 3px;
}

form {
  padding: 16px 48px;
}

.tasks a.nav {
  display: inline-block;
  height: auto;
  border-radius: 0 !important;
  text-decoration: none;
  width: 49.5%;
  padding: 10px;
  font-size: 20px;
  background: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
  color: white;
  box-sizing: border-box;
  font-family: "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui,
    -apple-system;
  font-weight: normal;
  text-align: center;
}

a {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

input[type="submit"] {
  display: block;
  margin: 32px auto;
}

.done,
.progress {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: white;
  visibility: hidden;
}

.done {
  transition: visibility 0s 1s;
}

.done a {
  display: inline-block;
  text-decoration: none;
}

/* Input, Textarea */
.addTaskfield input[type="text"],
.addTaskfield textarea {
  box-sizing: border-box;
  margin: 0;
  border: solid 2px;
  border-color: black;
  border-radius: 4px;
  padding: 5px 13px 5px;
  width: 100%;
  height: inherit;
  background-color: transparent;
  box-shadow: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  transition: border 0.2s, box-shadow 0.2s;
}

/* Span */
.addTaskfield input[type="text"] + span,
.addTaskfield textarea + span {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
  width: 100%;
  max-height: 100%;
  color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
  font-size: 75%;
  line-height: 15px;
  cursor: text;
  transition: color 0.2s, font-size 0.2s, line-height 0.2s;
}

/* Corners */
.addTaskfield input[type="text"] + span::before,
.addTaskfield input[type="text"] + span::after,
.addTaskfield textarea + span::before,
.addTaskfield textarea + span::after {
  content: "";
  display: block;
  box-sizing: border-box;
  margin-top: 6px;
  border-top: solid 1px;
  border-top-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
  min-width: 10px;
  height: 8px;
  pointer-events: none;
  box-shadow: inset 0 1px transparent;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.addTaskfield input[type="text"] + span::before,
.addTaskfield textarea + span::before {
  margin-right: 4px;
  border-left: solid 1px transparent;
  border-radius: 4px 0;
}

.addTaskfield input[type="text"] + span::after,
.addTaskfield textarea + span::after {
  flex-grow: 1;
  margin-left: 4px;
  border-right: solid 1px transparent;
  border-radius: 0 4px;
}

/* Hover */
.addTaskfield:hover input[type="text"],
.addTaskfield:hover textarea,
a.active {
  border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
  /* border-top-color: transparent; */
}

.addTaskfield:hover input[type="text"] + span::before,
.addTaskfield:hover textarea + span::before,
.addTaskfield:hover input[type="text"] + span::after,
.addTaskfield:hover textarea + span::after {
  border-top-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
}

.addTaskfield:hover input[type="text"]:not(:focus):placeholder-shown,
.addTaskfield:hover textarea:not(:focus):placeholder-shown,
a.active {
  border-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.87);
}

/* Placeholder-shown */
.addTaskfield input[type="text"]:not(:focus):placeholder-shown,
.addTaskfield textarea:not(:focus):placeholder-shown {
  border-top-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
}

.addTaskfield input[type="text"]:not(:focus):placeholder-shown + span,
.addTaskfield textarea:not(:focus):placeholder-shown + span {
  font-size: inherit;
  line-height: 68px;
}

/* Focus */
.addTaskfield input[type="text"]:focus,
.addTaskfield textarea:focus {
  border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
  /* border-top-color: transparent; */
  /* border-width: 2px; */
  /* box-shadow: inset 1px 0 var(--pure-material-safari-helper1), inset -1px 0 var(--pure-material-safari-helper1), inset 0 -1px var(--pure-material-safari-helper1); */
  outline: none;
}

.addTaskfield input[type="text"]:focus + span,
.addTaskfield textarea:focus + span {
  color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
}

.addTaskfield input[type="text"]:focus + span::before,
.addTaskfield input[type="text"]:focus + span::after,
.addTaskfield textarea:focus + span::before,
.addTaskfield textarea:focus + span::after {
  border-top-color: var(--pure-material-safari-helper1) !important;
  box-shadow: inset 0 1px var(--pure-material-safari-helper1);
}

/* Disabled */
.addTaskfield input[type="text"]:disabled,
.addTaskfield input[type="text"]:disabled + span,
.addTaskfield textarea:disabled,
.addTaskfield textarea:disabled + span {
  border-color: rgba(
    var(--pure-material-onsurface-rgb, 0, 0, 0),
    0.38
  ) !important;
  /* border-top-color: transparent !important; */
  color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
  pointer-events: none;
}

.addTaskfield input[type="text"]:disabled + span::before,
.addTaskfield input[type="text"]:disabled + span::after,
.addTaskfield textarea:disabled + span::before,
.addTaskfield textarea:disabled + span::after {
  border-top-color: rgba(
    var(--pure-material-onsurface-rgb, 0, 0, 0),
    0.38
  ) !important;
}

.addTaskfield input[type="text"]:disabled:placeholder-shown,
.addTaskfield input[type="text"]:disabled:placeholder-shown + span,
.addTaskfield textarea:disabled:placeholder-shown,
.addTaskfield textarea:disabled:placeholder-shown + span {
  border-top-color: rgba(
    var(--pure-material-onsurface-rgb, 0, 0, 0),
    0.38
  ) !important;
}

/* Faster transition in Safari for less noticable fractional font-size issue */
@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) {
    .addTaskfield input[type="text"],
    .addTaskfield input[type="text"] + span,
    .addTaskfield textarea,
    .addTaskfield textarea + span,
    .addTaskfield input[type="text"] + span::before,
    .addTaskfield input[type="text"] + span::after,
    .addTaskfield textarea + span::before,
    .addTaskfield textarea + span::after {
      transition-duration: 0.1s;
    }
  }
}

.pure-material-progress-circular {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-sizing: border-box;
  border: none;
  border-radius: 50%;
  padding: 0.25em;
  width: 3em;
  height: 3em;
  color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
  background-color: transparent;
  font-size: 16px;
  overflow: hidden;
}

.pure-material-progress-circular::-webkit-progress-bar {
  background-color: transparent;
}

/* Indeterminate */
.pure-material-progress-circular:indeterminate {
  -webkit-mask-image: linear-gradient(transparent 50%, black 50%),
    linear-gradient(to right, transparent 50%, black 50%);
  mask-image: linear-gradient(transparent 50%, black 50%),
    linear-gradient(to right, transparent 50%, black 50%);
  animation: pure-material-progress-circular 6s infinite
    cubic-bezier(0.3, 0.6, 1, 1);
}

:-ms-lang(x),
.pure-material-progress-circular:indeterminate {
  animation: none;
}

.pure-material-progress-circular:indeterminate::before,
.pure-material-progress-circular:indeterminate::-webkit-progress-value {
  content: "";
  display: block;
  box-sizing: border-box;
  margin-bottom: 0.25em;
  border: solid 0.25em transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  width: 100% !important;
  height: 100%;
  background-color: transparent;
  animation: pure-material-progress-circular-pseudo 0.75s infinite linear
    alternate;
}

.pure-material-progress-circular:indeterminate::-moz-progress-bar {
  box-sizing: border-box;
  border: solid 0.25em transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  background-color: transparent;
  animation: pure-material-progress-circular-pseudo 0.75s infinite linear
    alternate;
}

/* Span */
.pure-material-radio span {
  display: inline-block;
  width: 100%;
  cursor: pointer;
}

/* Checked */
.pure-material-radio input[type="checkbox"]:checked {
  background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
}

.pure-material-radio input[type="checkbox"]:checked + span::before {
  border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
}

.pure-material-radio input[type="checkbox"]:checked + span::after {
  transform: translate(5px, 5px) scale(1);
}

/* Hover, Focus */
.pure-material-radio:hover input[type="text"] {
  opacity: 0.04;
}

.pure-material-radio input[type="text"]:focus {
  opacity: 0.12;
}

.pure-material-radio:hover input[type="text"]:focus {
  opacity: 0.16;
}

.add-btn {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  border: none;
  border-radius: 4px;
  padding: 0 16px;
  min-width: 64px;
  height: 36px;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  text-transform: uppercase;
  color: white;
  background-color: purple;
  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),
    0 1px 5px 0 rgba(0, 0, 0, 0.12);
  font-size: 14px;
  font-weight: 500;
  line-height: 36px;
  overflow: hidden;
  outline: none;
  cursor: pointer;
  transition: box-shadow 0.2s;
}

.add-btn::-moz-focus-inner {
  border: none;
}

/* Hover, Focus */
.add-btn:hover,
.add-btn:focus,
a.active {
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14),
    0 1px 10px 0 rgba(0, 0, 0, 0.12);
}

.add-btn:hover::before,
.tasks a.active::before {
  opacity: 0.35;
}

.add-btn:focus::before {
  opacity: 0.24;
}

.add-btn:hover:focus::before {
  opacity: 0.3;
}

/* Active */
.add-btn:active {
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.add-btn:active::after {
  opacity: 0.32;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0s;
}

.add-btn:disabled::before {
  opacity: 0;
}

.add-btn:disabled::after {
  opacity: 0;
}

.checkbox {
  z-index: 0;
  position: relative;
  display: inline-block;
  font-size: 16px;
  line-height: 1.5;
}

/* Input */
.checkbox input[type="checkbox"] {
  z-index: -1;
  position: absolute;
  left: -10px;
  top: -8px;
  display: block;
  margin: 0;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  box-shadow: none;
  outline: none;
  opacity: 0;
  transform: scale(1);
  pointer-events: none;
  transition: opacity 0.3s, transform 0.2s;
}

/* Span */
.checkbox span {
  display: inline-block;
  width: 100%;
  cursor: pointer;
}

/* Box */
.checkbox span::before {
  content: "";
  display: inline-block;
  box-sizing: border-box;
  margin: 3px 11px 3px 1px;
  border: solid 2px;
  border-color: gray;
  border-radius: 2px;
  width: 18px;
  height: 18px;
  vertical-align: top;
  transition: border-color 0.2s, background-color 0.2s;
}

/* Checked, Indeterminate */
.checkbox input[type="checkbox"]:checked,
.checkbox input[type="checkbox"]:indeterminate {
}

.checkbox input[type="checkbox"]:checked + span::before,
.checkbox input[type="checkbox"]:indeterminate + span::before {
  border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
  background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
}

.checkbox input[type="checkbox"]:checked + span::after,
.checkbox input[type="checkbox"]:indeterminate + span::after {
  border-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
}
/* Indeterminate setsor returns whether the state of a checkbox has changed. */
.checkbox input[type="checkbox"]:indeterminate + span::after {
  border-left: none;
  transform: translate(4px, 3px);
}

/* Hover, Focus */
.checkbox:hover input[type="checkbox"] {
  opacity: 0.04;
}

.checkbox input[type="checkbox"]:focus {
  /* opacity: 0.12; */
}

.checkbox:hover input[type="checkbox"]:focus {
  opacity: 0.16;
}

/* Active */
.checkbox input[type="checkbox"]:active {
  opacity: 1;
  transform: scale(0);
  transition: transform 0s, opacity 0s;
}

.checkbox input[type="checkbox"]:active + span::before {
  border-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
}

.checkbox input[type="checkbox"]:checked:active + span::before {
  border-color: transparent;
  background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.6);
}

/* Disabled */
.checkbox input[type="checkbox"]:disabled {
  opacity: 0;
}

.checkbox input[type="checkbox"]:disabled + span {
  color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
  cursor: initial;
}

.checkbox input[type="checkbox"]:disabled + span::before {
  border-color: currentColor;
}

.checkbox input[type="checkbox"]:checked:disabled + span::before,
.checkbox input[type="checkbox"]:indeterminate:disabled + span::before {
  border-color: transparent;
  background-color: currentColor;
}

.close {
  position: relative;
  right: 20px;
  top: 11px;
  width: 22px;
  height: 22px;
  opacity: 0.3;
}

.close:hover {
  opacity: 1;
}

.close:before,
.close:after {
  position: absolute;
  left: 15px;
  content: " ";
  height: 20px;
  width: 2px;
  background-color: rgb(247, 86, 86);
}

.close:before {
  transform: rotate(45deg);
}

.close:after {
  transform: rotate(-45deg);
}

.edit {
  float: right;
  position: relative;
  right: 20px;
  top: 11px;
  width: auto;
  height: auto;
  color: blue;
  opacity: 0.5;
  margin-left: 25px;
  margin-top: 2px;
}

.edit:hover {
  opacity: 1;
}
